--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "This function provided a &quot;shortcut&quot; for creating the #identity method based on given accessors and returns the Equatable module for inclusion."
- !ruby/struct:SM::Flow::VERB 
  body: " include Equatable(:a, :b)\n"
- !ruby/struct:SM::Flow::P 
  body: "is equivalent to including a module containing:"
- !ruby/struct:SM::Flow::VERB 
  body: "  def ==(other)\n    self.a == other.a &amp;&amp; self.b == other.b\n  end\n\n  def eql?(other)\n    self.a.eql?(other.a) &amp;&amp; self.b.eql?(other.b)\n  end\n\n  def hash()\n    self.a.hash ^ self.b.hash\n  end\n"
full_name: Module#Equatable
is_singleton: false
name: Equatable
params: (*accessors)
visibility: public
