--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::H 
  level: 1
  text: Snapshot
- !ruby/struct:SM::Flow::P 
  body: "A lightweight single-depth object state capture. The #take_snapshot method reads the object's state, which is generally it's collection of instance variables, and returns them in a hash. The state can be restored with #apply_snapshot."
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Usage
- !ruby/struct:SM::Flow::VERB 
  body: "  Customer = Struct.new(&quot;Customer&quot;, :name, :address, :zip)\n  joe = Customer.new( &quot;Joe Pitare&quot;, &quot;1115 Lila Ln.&quot;, 47634 )\n\n  # simple transactions\n  joe_snap = joe.take_snapshot\n  begin\n    do_something_with( joe )\n  rescue\n    joe.apply_snapshot( joe_snap )\n  end\n\n  joe_snap[:name]     =&gt; &quot;Joe Pitare&quot;\n  joe_snap[:address]  =&gt; &quot;1115 Lila Ln.&quot;\n  joe_snap[:zip]      =&gt; 47634\n"
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Details
- !ruby/struct:SM::Flow::P 
  body: "Class Snapshot simply represents a collection of objects from which snapshots were taken via their methods #take_snapshot. It provides methods to add an object to a snapshot (Snapshot#add) as well as to restore all objects of the snapshot to their state stored in the snapshot (method Snapshot#restore)."
- !ruby/struct:SM::Flow::P 
  body: In Wee, this class is used to backtracking the state of components (or decorations/presenters). Components that want an undo-facility to be implemented (triggered for example by a browsers back-button), have to overwrite the Wee::Component#backtrack_state method.
constants: []

full_name: Snapshot
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: add
- !ruby/object:RI::MethodSummary 
  name: restore
name: Snapshot
superclass: Object
