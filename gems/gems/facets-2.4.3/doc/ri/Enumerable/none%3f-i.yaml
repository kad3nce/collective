--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: e
comment: 
- !ruby/struct:SM::Flow::P 
  body: Enumerable#none? is the logical opposite of the builtin method Enumerable#any?. It returns <tt>true</tt> if and only if <em>none</em> of the elements in the collection satisfy the predicate.
- !ruby/struct:SM::Flow::P 
  body: If no predicate is provided, Enumerable#none? returns <tt>true</tt> if and only if <em>none</em> of the elements have a true value (i.e. not <tt>nil</tt> or <tt>false</tt>).
- !ruby/struct:SM::Flow::VERB 
  body: "  [].none?                      # true\n  [nil].none?                   # true\n  [5,8,9].none?                 # false\n  (1...10).none? { |n| n &lt; 0 }  # true\n  (1...10).none? { |n| n &gt; 0 }  # false\n\n  CREDIT: Gavin Sinclair\n"
full_name: Enumerable#none?
is_singleton: false
name: none?
params: ( {|e| ...}
visibility: public
